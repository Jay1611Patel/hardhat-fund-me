{
 "namespace": "HardhatGasReporter",
 "toolchain": "hardhat",
 "version": "2.3.0",
 "options": {
  "currency": "USD",
  "currencyDisplayPrecision": 2,
  "darkMode": false,
  "enabled": true,
  "excludeContracts": [],
  "excludeAutoGeneratedGetters": false,
  "forceTerminalOutput": false,
  "includeBytecodeInJSON": false,
  "includeIntrinsicGas": true,
  "L1": "ethereum",
  "noColors": true,
  "offline": false,
  "opStackBaseFeeScalar": 0,
  "opStackBlobBaseFeeScalar": 0,
  "outputJSON": true,
  "outputJSONFile": "./gasReporterOutput.json",
  "reportFormat": "terminal",
  "reportPureAndViewMethods": false,
  "rst": false,
  "rstTitle": "",
  "suppressTerminalOutput": false,
  "showMethodSig": true,
  "showUncalledMethods": false,
  "token": "ETH",
  "outputFile": "gasReporterOutput.json",
  "blockGasLimit": 30000000,
  "solcInfo": {
   "version": "0.8.28",
   "optimizer": false,
   "runs": 200,
   "viaIR": false
  }
 },
 "data": {
  "methods": {
   "MockV3Aggregator_313ce567": {
    "key": "313ce567",
    "isCall": true,
    "contract": "MockV3Aggregator",
    "method": "decimals",
    "fnSig": "decimals()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_7284e416": {
    "key": "7284e416",
    "isCall": true,
    "contract": "MockV3Aggregator",
    "method": "description",
    "fnSig": "description()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_b5ab58dc": {
    "key": "b5ab58dc",
    "isCall": true,
    "contract": "MockV3Aggregator",
    "method": "getAnswer",
    "fnSig": "getAnswer(uint256)",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_9a6fc8f5": {
    "key": "9a6fc8f5",
    "isCall": true,
    "contract": "MockV3Aggregator",
    "method": "getRoundData",
    "fnSig": "getRoundData(uint80)",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_b633620c": {
    "key": "b633620c",
    "isCall": true,
    "contract": "MockV3Aggregator",
    "method": "getTimestamp",
    "fnSig": "getTimestamp(uint256)",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_50d25bcd": {
    "key": "50d25bcd",
    "isCall": true,
    "contract": "MockV3Aggregator",
    "method": "latestAnswer",
    "fnSig": "latestAnswer()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_668a0f02": {
    "key": "668a0f02",
    "isCall": true,
    "contract": "MockV3Aggregator",
    "method": "latestRound",
    "fnSig": "latestRound()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_feaf968c": {
    "key": "feaf968c",
    "isCall": true,
    "contract": "MockV3Aggregator",
    "method": "latestRoundData",
    "fnSig": "latestRoundData()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_8205bf6a": {
    "key": "8205bf6a",
    "isCall": true,
    "contract": "MockV3Aggregator",
    "method": "latestTimestamp",
    "fnSig": "latestTimestamp()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_a87a20ce": {
    "key": "a87a20ce",
    "isCall": false,
    "contract": "MockV3Aggregator",
    "method": "updateAnswer",
    "fnSig": "updateAnswer(int256)",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_4aa2011f": {
    "key": "4aa2011f",
    "isCall": false,
    "contract": "MockV3Aggregator",
    "method": "updateRoundData",
    "fnSig": "updateRoundData(uint80,int256,uint256,uint256)",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "MockV3Aggregator_54fd4d50": {
    "key": "54fd4d50",
    "isCall": true,
    "contract": "MockV3Aggregator",
    "method": "version",
    "fnSig": "version()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "FundMe_6b69a592": {
    "key": "6b69a592",
    "isCall": true,
    "contract": "FundMe",
    "method": "MINIMUM_USD",
    "fnSig": "MINIMUM_USD()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "FundMe_be2693f0": {
    "key": "be2693f0",
    "isCall": false,
    "contract": "FundMe",
    "method": "cheaperWithdraw",
    "fnSig": "cheaperWithdraw()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "FundMe_b60d4288": {
    "key": "b60d4288",
    "isCall": false,
    "contract": "FundMe",
    "method": "fund",
    "fnSig": "fund()",
    "intrinsicGas": [
     21064,
     21064,
     21064,
     21064,
     21064,
     21064,
     21064,
     21064,
     21064,
     21064
    ],
    "callData": [
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0,
     0
    ],
    "gasData": [
     87168,
     87168,
     87168,
     87168,
     87168,
     104268,
     104268,
     104268,
     104268,
     104268
    ],
    "numberOfCalls": 10,
    "executionGasAverage": 95718,
    "calldataGasAverage": 0,
    "min": 87168,
    "max": 104268
   },
   "FundMe_0343fb25": {
    "key": "0343fb25",
    "isCall": true,
    "contract": "FundMe",
    "method": "getAddressToAmountFunded",
    "fnSig": "getAddressToAmountFunded(address)",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "FundMe_d7b4750c": {
    "key": "d7b4750c",
    "isCall": true,
    "contract": "FundMe",
    "method": "getFunder",
    "fnSig": "getFunder(uint256)",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "FundMe_893d20e8": {
    "key": "893d20e8",
    "isCall": true,
    "contract": "FundMe",
    "method": "getOwner",
    "fnSig": "getOwner()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "FundMe_9e87a5cd": {
    "key": "9e87a5cd",
    "isCall": true,
    "contract": "FundMe",
    "method": "getPriceFeed",
    "fnSig": "getPriceFeed()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "FundMe_0d8e6e2c": {
    "key": "0d8e6e2c",
    "isCall": true,
    "contract": "FundMe",
    "method": "getVersion",
    "fnSig": "getVersion()",
    "intrinsicGas": [],
    "callData": [],
    "gasData": [],
    "numberOfCalls": 0
   },
   "FundMe_3ccfd60b": {
    "key": "3ccfd60b",
    "isCall": false,
    "contract": "FundMe",
    "method": "withdraw",
    "fnSig": "withdraw()",
    "intrinsicGas": [
     21064,
     21064,
     21064,
     21064
    ],
    "callData": [
     0,
     0,
     0,
     0
    ],
    "gasData": [
     35542,
     35542,
     77758,
     77758
    ],
    "numberOfCalls": 4,
    "executionGasAverage": 56650,
    "calldataGasAverage": 0,
    "min": 35542,
    "max": 77758
   }
  },
  "deployments": [
   {
    "name": "..\\@chainlink\\contracts\\src\\v0.6\\interfaces\\AggregatorV3Interface.sol:AggregatorV3Interface",
    "gasData": [],
    "callData": []
   },
   {
    "name": "..\\@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:AggregatorV3Interface",
    "gasData": [],
    "callData": []
   },
   {
    "name": "AggregatorInterface",
    "gasData": [],
    "callData": []
   },
   {
    "name": "AggregatorV2V3Interface",
    "gasData": [],
    "callData": []
   },
   {
    "name": "FundMe",
    "gasData": [
     991116,
     991116
    ],
    "callData": [
     0,
     0
    ],
    "executionGasAverage": 991116,
    "calldataGasAverage": 0,
    "min": 991116,
    "max": 991116,
    "percent": 3.3
   },
   {
    "name": "MockV3Aggregator",
    "gasData": [
     569735,
     569735
    ],
    "callData": [
     0,
     0
    ],
    "executionGasAverage": 569735,
    "calldataGasAverage": 0,
    "min": 569735,
    "max": 569735,
    "percent": 1.9
   },
   {
    "name": "PriceConverter",
    "gasData": [],
    "callData": []
   }
  ]
 }
}